History of Development

1. Basic Scraper
- One-Off, One-URL
- Save data as DF or csv

2. Structure of Target Websites
- FrontPage, News Headline with URL
- Each URL to a News
- Some Websites with Multiple Sections

2.1 Corresponding Program Function
- Scrape_One_Page
- Scrape_All_Pages
- Scrape_One_Section
- Scrape_All_Sections

3 Multiple Sites
- RSS, HTML, API
- Data Scheme
-- title, date, summary, scrape_time, section, source, url, content
- Date Cleansing

4. News Update
- Run Scraper every 15 mins
- How to Properly Store the data
-- Latest Scraped Data + Stored Data
-- Remove Duplicates by date and title
-- Data Retention
-- Count Added Entry

5. Logging
- Finished Time, Media, Added Entry

6.Code Structing
6.1 Scraper
media_frontpage_parse_sections
|- media_frontpage_parse_a_section (E)
|- |- media_fetch_url (E)
|- |- media_frontpage_get_paragraphs (E)
|- |- media_frontpage_parse_paragraph (E)

media_newspage_parse_pages (E)
|- media_newspage_parse_a_page (E)
|- |- media_fetch_url (E)
|- |- media_remove_elements
|- |- media_newspage_get_paragraphs (E)
|- |- media_newspage_parse_paragraphs (E)

6.2 Utilities
- DB_Read, DB_Write
- Logging
- Retention, Num_Latest_News

6.3 Updater
- Scrape_All_Sections (D)
- DB_Read
- DB_Write, backup
- Join Scrape_All_Sections and DB_Read
- Drop Duplicates
- Retention
- Scrape_All_Pages (D) 
- Num_Latest_News, Logging
- DB_Write

6.4 Updater Class and Object
- Define Updater as a Class
- Create an Updater Object per Website
- Override Scrapers per each Website Updater Object

7. Cloud Deployment
- Azure App Function
- Create and Setup an Azure Func with VS Code Ext using Side Bar
- Create an Empty Project Folder in Windows
- Map Azure Func to Folder
- Create .venv Env
- Install Python lib in .venv via pip
- Update requirement.txt
- Update function_app.py, unique Timer Function name

8. TODO
- HK01 Pic Descriptors
- URL instant Scraper
-- Host an API service for Streamlit App to Consume

Dev History
20250325
- Added RTHK
- Added HK01
- Fixed Pandas Date Warning
-- Using .copy() in retention date comparison
- Fixed Local vs Azure Run Difference
-- Only Found in HK01, Due to Timestamp
- HK01 Article ID Length
-- Checked Json, no Leading 0s
- HK01, Add LastUpdateTime

20250328
- Added Selector UI
- Added Cache avoid loading everytime
- Added Clear Cache Button

20250404
- Using Expander to replace Selector
- Add Drop Dupe method in Master updater Class
- HK01, Updated Drop Dupe Logic with ID and LastUpdateTime
- Added /n in Content

20250405
- Refactor Localtime and Headers into scraper_utilties
- Refactor RTHK, HK01 scraper
- Fixed master_scraper drop dupes bug
- Added SingTao
- Added MingPao
- TODO for Old Scrape 
-- Add newspage_parse_pages function
-- Add news_df["news_content"] = "" in frontpage_parse_a_section
-- Add \n\n in newspage_parse_paragraphs
-- Add time.sleep(WAIT_TIME) newspage_parse_a_page 
- Randomize Wait Time, Added Low Chance Long Wait

20250408
- Added OnCC

20250410
- Added CRadio

20250428
- Added Metro

20250511
- Fix a Strange Bug Metro cannot get news content of 1st URL
-- Add a Repeat Attempt on URL fetch function

20250512
- Updated URL fetch function for OnCC, CRadio
- Added TVB

20250513
- Added Gov.HK / GIA

20250515
- Modified GIA UI output
- Inc HK01 Pages from Frontpage from 40 to 80
-- To Solve missing news from last part of frontpage

20250525
- Change SingTao Scraper for Changed Layout